{
    "files": [
        "src/ethereum/EthereumLightClient.sol",
    ],
    "verify": "EthereumLightClient:certora/specs/EthereumLightClient.spec",
    "wait_for_results": "none",
    "rule_sanity": "basic",
    "optimistic_loop": true,
    "optimistic_fallback": true,
    // "coverage_info": "basic",
    "msg": "EthereumLightClient formal verification",
    "mutations": {
        "gambit": [
            {
            "filename": "src/ethereum/EthereumLightClient.sol",
            "num_mutants": 20,
            "functions": [
                "joinRelayerNetwork",
                "_removeRelayerFromWhitelist",
                "exitRelayerNetwork",
                "_chooseRandomProposer",
                "onlyProposer",
                "withdrawIncentive",
                // "constructor",
                "updateHeader",
                "updateSyncCommittee",
                "_verifyHeader",
                "_updateHeader",
                // we do not mutate the following functions because they are used to prepare inputs to the proof verification. Since the proof verification cannot be verified by Certora (this is why used NONDET summarization for verifySignatureProof), it is not possible to verify the correctness of prepared inputs. These functions must be audited manually.
                // "_mapRootToPoseidon",
                // "_headerBLSVerify",
                "_getCurrentSlot",
                "_getPeriodFromSlot",
                "slot2block",
                "syncCommitteeRootByPeriod",
                "syncCommitteeRootToPoseidon",
                "_distributeIncentive",
                "executionStateRoot"
            ]
            }
        ]
    }
}